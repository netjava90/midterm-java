Please answer the below core-java Questions:

What is programing language?

A.It is a intermediate language between a machine and human.
they are used in computer programming to implement algorithms.
they are instructions given for computers.





What jdk contains or composed of and define each components?
A. JDK contains these components:
- The Java Development Kit (JDK): The JDK (Java Development Kit) allows developers to create Java applications and
  them and run by the JVM and JRE. The JDK is a software package you download in order to
  create Java-based applications.
- The Java Runtime Environment (JRE): JRE, it is the runtime environment that is required to execute
  Java programs and applications. JRE consists of Java Virtual Machine (JVM) and binaries and other classes to successfully
  execute Java programs.
- The Java Compiler: This is a compiler for Java programming language and its function is to generate Java class files
  from the Java source code. Java class file contains a platform-independent Java byte code.
- The Java Virtual Machine (JVM): JVM is the center of Java programming language and Java platform. The JVM converts the
  byte code into machine-specific code.






What is IDE?
A.IDE stands for Integrated Development Environment or Java code editor, it enables programmers to consolidate the different aspects of
  writing a computer program. Many IDEs provide features like syntax highlighting and code completion, which help the
  user to code more easily (intellij in a good example).




What are the IDEs available in the market to support java?
A.Eclipse
  MyEclipse
  IntelliJ
  NetBeans
  JDeveloper
  DrJava




Explain the entire java life cycle.
 Source code (src) becoming a byte code after going through a compiler.
 Byte code will run during run time mode using just in time compiler.

 in the case of the hello class file we wrote in note pad:
.First,typed the class in a text-editor (notepad), then we have to save the file(.java extension).
 It is a good convention to save the file with the name of the class.

 Second step is compilation. The name of the Java compiler is "javac"
 The input to the compiler is Java source code which is available in (.javac file). The output of the compiler is platform independent (bytecode). The file which is
 generated after compilation is (.class file).

 Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
 Input to the JVM is bytecode and output is machine code which will be executed by the CPU of the local machine.


what is class?
Class is basically blue print that act as a template for creating objects of the identical type.
It represents the common properties and actions (functions) of an object.


What is object?
The object is an instance of class or a block of code referred by name and can be used later.

What is the entry point of an application?
The main method is the entry point of an application.

Why main is static?
Main method is static so it can called it explicitly without the creation of an object or before the creation of an object
of the class.



Which class is the superclass of all classes?
the object is the root or superclass of the class hierarchy in java.

What is difference between path and classpath variables?
Path variable is the path that we set for java in general
Path class is the path that we set for classes only


What is the difference between an Interface and Abstract class?

Interface:
Interface can we extended to another interface
We use the word implement to implement an interface
Interface can only have abstract methods, it can’t have implement methods.
Variables in interface are final.
By default an interface has public methods
Interface is slower in terms of memory.
Can’t create a constructor in interface

Abstract class:
Can have abstract and non-abstract methods
Contain final variables are non-final as well
Can have privet and protected variables
Use the word extends to implement it
In terms of memory abstract is faster
Can implement multiple interfaces
Can’t create a constructor in abstract



Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
We cannot create object in interface or the abstract class.
We can only instantiate one of their subclasses/implementers.


what is Access Specifier?
Access specifier or modifier access to  classes, fields and methods in Java. We have default, private,
protected and public.


What is OOP ? Define each feature of java OOP.
Inheritance: (about classes)
                Single (from father to child)
                Multilevel (from grandfather to father to child) using extend key word.
                java does not support multiple inheritance.
                (child subclass, *father superclass)
                Hierarchical: two classes inherit from one class (grandfather and bird from animals)

Encapsulation: (about variables)
               It is data hiding
               It is rapping a (private variable)  value to be used using a getter and setter method.
               Private variable can’t be accessible unless if we use encapsulation.

Polymorphism: (about methods)
              Creating a same method name with different number of parameters.
              We can’t create duplicate methods unless if we use overriding or overloading method.
                 1- Overloading:
                  Keep the same method name with different parameters.
                 2- overriding: (use annotation) @override
                  Keep the same name, same parameters, with different body.

Abstraction: (about interface)
                It is an implementation hiding. Using interface or abstraction.


What is Java Package and which package is imported by default?
Package is a namespace that organizes a set of related classes and interfaces.
java.lang: is the package that  is imported by default.


What is API? Name list of API that you have used so far.
Application Programming Interface (API) is a list of all classes that are part of the Java development kit (JDK).
It includes all Java packages, classes, and interfaces, along with their methods, fields, and constructors.
These pre-written classes provide a tremendous amount of functionality to a programmer.
I have used java and selenium.


Does java support multiple inheritance, explain why or why not?
Java does not support multiple inheritances through classes because it leads to overriding of methods when both extended.


What is method overloading and when it happens?
Methods of the same class have the same name but each method must have a different (number of) parameters.

Explain exceptions in java and how to handle it.
we have two types of exception in java:
compiler exceptions that happens before run type and,
run time exceptions that happen after run time.
we have two way of handling this exceptions:
using the try and catch block or by using throws key word in the method signature.

What is static keyword in java? How it has been used in variables and methods ?
In Java, a static keyword is a member of a class that isn't associated with an instance of a class.
Instead, the member belongs to the class itself.
   Anything that is static belong to the class.
   Static methods can only access static attributes.
   We use class to access static attributes.

What is final and how it has been used variables and methods?
Final (non-access specifier (modifier)) set to prevent the usage of the variable again.
We can’t override a final method
Final class can’t be inherited
final variable cant be reused.

What is final, finally and finalize?
Final: (non-access specifier (modifier)) set to prevent the usage of the variable again.
finally: is a block of code associated with try and catch to make sure that the code will be executed after try and catch
Finales: is a method we call during the java garbage collection.

What is a constructor ?
A block of code similar to method used to initialize the object.
implicitly call the code during the use of the object.


Can we have multiple constructors in a class?
yes we can have multiple constructor.


If we don't have a constructor declared, what is called during the object creation?
if we do not have a constructor declared a default constructor will be created by java compiler.

What is "this" keyword in java ?
We use it to call the global variable. java gives advantage to the local variable unless if we use this key word to
refer to the global variable.
this keyword is to eliminate the confusion between class attributes and parameters with the same name.


What is "super" keyword in java? How many possible way can you use?
super key word is used to refer to the super class.
It is also used to call superclass methods, and to access the superclass constructor.


What is JVM stand for ?
Java Virtual Machine


Is JVM platform independent?
No, JVMs is not platform independent.
In fact they are platform specific run time environment provided by the vendor.


What version of java are you using?
Java 8.


What is JAR stand for ?
JAR stands for Java Archive.
A JAR file is basically a zip-file which contains a couple of class files and a text files.


What is the difference between JDK and JVM?
JDK contains JVM and whole other tools for java development inside it.
JVM converts bytecode to machine code and execute it.
There is no matching functionality between JDK and JVM.


What is the difference between JVM and JRE?
JRE: is a software that allows Java program to run.
JVM: is an environment for executing bytecode.



What is compile time and run time?
Compile-time: is the instance where the code you entered is converted to executable.
Run-time: is the instance where the executable is running.



What is heap?
heap is a special data structure in java. it is a tree based structure and can be classify as a binary tree.



How java manage it's memory?
Using the garbage data collections.


What is the difference between String, StringBuffer and StringBuilder?
String is immutable (cant be change its value after it constructed).
if you try to alter their values, another object gets created.

StringBuffer and StringBuilder are mutable so they can change their values.
The difference between StringBuffer and StringBuilder is that StringBuffer is thread-safe.



What is Singleton class?
Singleton is an object hiding.
Singleton class is to control object creation by keeping private constructor so we can only instantiate one object.
Limits the number of the objects we use for that specific class.


What is Serialization and Deserialization?
Serialization is a process of converting an object into a sequence of bytes which can be reverted back into a copy of
the object.
The reverse process of creating object from sequence of bytes is called deserialization.



when to use transient variable in java?
Transient is a variables modifier used in serialization.
At the time of serialization,if we don’t want to save value of a particular variable in a file we use transient keyword.



Difference between while and do..while loop?
While loop check the condition first and then execute the code.
Do while loop execute the code first and then check if the condition is satisfied.


What is Enum?
Enum is for Enumeration.
An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).
To create an enum, we use the enum keyword (instead of class or interface), and separate the constants with a comma.


What is Iterator?
iterator came from "iterating" and it is the technical term for looping.


Which one will take more memory, an int or Integer?
integer take more memory.
int: is a primitive data type which takes 32 bits(4 bytes) to store.
Integer: is an object which takes 128 bits (16 bytes) to store.

so each Integer object can occupy 4 (or more)
times the storage space as a primitive int.



Why is String Immutable in Java?
String immutable means it can not be changed.
String class is immutable because of the security synchronization.


What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
Constructor chaining can be done in two ways:
  - Within same class: It can be done using this() keyword for constructors in same class
  - From base class: by using super() keyword to call constructor from the base class.



The difference between Serial and Parallel Garbage Collector?
Serial collector: is a default copying collector which uses only one Garbage Collector thread for the GC operation.
parallel collector: uses multiple Garbage collector threads for the GC operation.



What is JIT stands for?
Just In Time compilation.


Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap.
The heap is created when the JVM starts up and may increase or decrease in size while the application runs.
When the heap becomes full, garbage is collected.
During the garbage collection objects that are no longer used are cleared, thus making space for new objects.



Can you guarantee the garbage collection process?
No, Garbage collection does not guarantee that a program will not run out of memory.


What is the difference between stack and heap in Java?
1-The main difference between heap and stack is that stack memory is used to store local variables and function call
   while heap memory is used to store objects in Java.
2- In a stack, the allocation and de-allocation are automatically done; whereas, in heap, it needs to be done by the
  programmer manually.
3- Handling of Heap frame is expensive than the handling of the stack frame.
4- Memory shortage problem is more likely to happen in stack whereas the main issue in heap memory is fragmentation.
5- Stack frame access is easier than the heap frame as the stack have a small region of memory and is cache-friendly,
  but in case of heap frames which are dispersed throughout the memory so it causes more cache misses.
6- A stack is not flexible, the memory size allotted cannot be changed whereas a heap is flexible, and the allotted
  memory can be altered.
7- Accessing time of heap takes is more than a stack.




What is reflection in java and why is it useful?
Reflection in Java is the ability to examine and/or modify the properties or behavior of an object at run-time.
why is it useful:
1-Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names
  of the classes, methods etc. at compile time.
2-It is also possible to instantiate new objects, invoke methods and get/set
  field values using reflection.



what is multithreading in java?
Multithreading is a Java feature that allows concurrent execution of two or more parts of a program for maximum
utilization of CPU (computer central processing).
Each part of such program is called a thread. So, threads are light-weight processes within a process.
Threads can be created by using two mechanisms :
   1. Extending the Thread class
   2. Implementing the Runnable Interface



What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple
threads in Java.
Synchronization in Java guarantees that no two threads can execute a synchronized method which
requires the same lock simultaneously or concurrently.


What is Framework?
A framework is a platform for developing software applications.
For example:
A framework may include predefined classes and functions that can be used to process input, and interact with system software.


What are the testing Framework available in java?
   - JUnit
   - TestNG
   - selenium
   - JBehave
   - Serenity
   - Selenide
   - HTTPUnit
   - JWebUnit


Difference between jUnit and testNG?
TestNG is quite similar to JUnit, but with added functionalities and features such as parallel test execution,
parameterization, and more. It is inspired by JUnit and NUnit.


What are the dependencies for this project?
we have to download three dependencies for this project:
my
. 1/mysql dependency:
<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
   <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>8.0.27</version>
   </dependency>

   2/mongoDB dependency:
   <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
    <dependency>
    <groupId>org.mongodb</groupId>
    <artifactId>mongo-java-driver</artifactId>
    <version>3.12.10</version>
    </dependency>

    3/junit dependency:
    <!-- https://mvnrepository.com/artifact/junit/junit -->
     <dependency>
     <groupId>junit</groupId>
     <artifactId>junit</artifactId>
     <version>4.13.2</version>
     <scope>test</scope>
     </dependency>
     <maven.compiler.source>17</maven.compiler.source>
     <maven.compiler.target>17</maven.compiler.target>


what is dependency injection in java?
Dependency injection:
Is a technique that allows the client code to be independent from the services it is relying on by implementing them
inside the code.


What is static binding and dynamic binding?
static binding in Java occurs during compile time.
dynamic binding in java occurs during runtime.
Overloaded methods are resolved using static binding
overridden methods are resolved using dynamic binding, at run time.













